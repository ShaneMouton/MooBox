
      body {
        position: fixed;
        width: 100vw;
        font-family: arial;
        overflow: hidden;
        margin: 0;
        padding: none;
        background-color: black;
        /*background-image: url("background.jpg");*/
        /*background-size: 100vw 100vh;*/
        /*overflow: hidden;*/
        -webkit-user-select: none;
      }

      .emscripten { padding-right: 0; margin-left: auto; margin-right: auto; display: block; }
      div.emscripten { text-align: center; }
      div.emscripten_border { border: 1px solid black; }

      /* the canvas *must not* have any border or padding, or mouse coords will be wrong */
      /*canvas.emscripten {
          border: thick solid rgba(100,100,255,.3);
          border-radius: .1vw;
          height: Calc(100vh - 9vw);
          max-width: 100vw;

          box-sizing: border-box;
          box-shadow: 0 0 20px black;
          margin: 4.5vw;
          margin-left: auto;
          margin-right: auto;
      }*/

      #status {
        display: inline-block;
        vertical-align: top;
        margin-top: 30px;
        margin-left: 20px;
        font-weight: bold;
        color: rgb(120, 120, 120);
      }

      #progressBar
      {
          position: absolute;
          top: 0;
          left: 0;
          width: 50vw;
          height: 5px;
          border-radius: 0;
          margin-left: auto;
          margin-right: auto;
          background-color: red;
      }

      #controls {
        display: inline-block;
        float: right;
        vertical-align: top;
        margin-top: 30px;
        margin-right: 20px;
      }

      #output {
        width: 100vw;
        height: 200px;
        display: block;
        background-color: black;
        padding: 15px 15px 15px 15px;
        color: white;
        font-family: 'Lucida Console', Monaco, monospace;
        outline: none;
        box-sizing: border-box;
        margin: 0;
      }

      #console{
          position: absolute;
          bottom: -200px;
          transition: bottom 1s;

      }

      #console:hover{
          bottom: 0px;
      }

      #outputTab{
          width: 18px;
          height: auto;
          border-top: solid black thin;
          border-left: solid black thin;
          border-right: solid black thin;
          border-top-left-radius: 2px;
          border-top-right-radius: 2px;

          position: relative;
          padding:10px 20px 10px 20px;
          left: 15px;
          top: 5px;
          background-color: white;
          filter: invert();
          display: inline-block;
          margin: 0;
      }

      .button
      {
          background: rgba(255,255,255,.5);
          filter: invert();
          border-radius: 0.25vw;
          border: thin rgba(0,0,0,.3) solid;
          cursor: pointer;
          padding: 1.2vw;
      }

      #sound
      {
          position: absolute;
          left: 0vw;
          top: 0vw;
      }

      #keyboardGlyph
      {
          cursor: pointer;
          padding: .5vw 1vw;
          border: thin rgba(0,0,0,.3) solid;
          background-color: rgba(255,255,255,.5);
          filter: invert();
          width: 5vw;
          height: auto;
          margin: 0 auto;
          display: block;
      }

      .bound::after
      {
          background-color: red;
          text-align: center;
          line-height: 2vw;
          width: 2vw;
          height: 2vw;
          border-radius: 1vw;
          color: white;
          font-size: 1vw;
          position: absolute;
          top: -.25vw;
          right: -.25vw;
          border: solid black thin;
      }
      /*classname[up]    = 'conUp';
      classname[left]  = 'conLeft';
      classname[right] = 'conRight';
      classname[down]  = 'conDown';
      classname[a]     = 'conA';
      classname[b]     = 'conB';*/
      .conA.bound::after
      {
        content: 'A';
      }

      .conB.bound::after
      {
        content: 'B';
      }

      .conUp.bound::after
      {
        content: 'U';
      }

      .conLeft.bound::after
      {
        content: 'L';
      }

      .conDown.bound::after
      {
        content: 'D';
      }

      .conRight.bound::after
      {
        content: 'R';
      }

      .hidden{
          display:none;
      }

      /*@media (max-width: 1024px)
      {*/
    .fullscreen canvas.emscripten {
        border-radius: 0px;
        height: 100vh;
        width: auto;
        max-width: 100vw;
        /*max-width:Calc(100vmax - 100px);*/
        /*box-sizing: border-box;*/
        /*box-shadow: 0 0 20px black;*/
        margin: 0;
        margin-left: auto;
        margin-right: auto;
    }

    .fullscreen #console{
        display: none;
    }

    body.fullscreen {
        /*font-family: arial;*/
        margin: 0;
        padding: 0;
        /*background-color: black;*/
        background-image: none;
        /*overflow: hidden;*/
    }

    .fullscreen #controller
    {
        position: absolute;
        bottom:5vw;
        left: 5vw;
        width: 80vw;
    }



    .fullscreen .conButton
    {
        /*display: none;*/
        position: absolute;
        bottom:-2.5vw;

        width: 10vw;
        height: 10vw;
        background-color: rgba(0,0,0,.3);
        border-radius:10vw;
        border: rgba(255,255,255, .3) double thick;
        cursor: pointer;
    }

    .fullscreen .conButton:hover
    {
        /*background-color: rgba(255,255,255,.75);
        border: rgba(0,0,0, .3) double thick;*/
    }

    .fullscreen #up
    {
        bottom: 8vw;
    }

    .fullscreen #down
    {
        bottom: -8vw;
    }

    .fullscreen #left
    {
        left: -8vw;
        bottom: 0vw;
    }

    .fullscreen #right
    {
        left: 8vw;
        bottom:0vw;
    }

    .fullscreen #a
    {
        right: -10.25vw;
    }

    .fullscreen #b
    {
        right: 3vw;

    }

    .fullscreen #start
    {
        height:10px;
        width: 10px;
        position: absolute;
        left: 35vw;
        bottom: -10vw;
    }

    .fullscreen #select
    {
        height:10px;
        width: 10px;
        position: absolute;
        left: 45vw;
        bottom: -10vw;
    }

    .fullscreen #action
    {
        position: relative;
        bottom:6vw;
    }

    .fullscreen .button
    {
        background: rgba(255,255,255,.5);
        filter: invert();
        border-radius: 0.25vw;
        border: thin rgba(0,0,0,.3) solid;
    }

    .fullscreen #sound
    {
        position: absolute;
        left: 0vw;
        top: 0vw;
        padding: 1.75vw;
    }

    .fullscreen #keyboard
    {
        display: none;
        position: absolute;
        right: 3vw;
        top: 3vw;
        padding: 1.1vw;
    }
      /*}*/

    #keyboardContainer
    {
        position: absolute;
        top:-28.5vw;
        height: 30vw;
        left: 0;
        width: 100vw;
        transition: top .4s;
    }

    .keyboardContainer:hover
    {
        position: absolute;
        top:0vw;
    }

      #onScreenKeyboard
      {
        /*display: none;*/
        position: relative;
        width: 94vw;
        margin-left: auto;
        margin-right: auto;
        font-size: 0vw;
      }

      #key32
      {
        width: 32.3vw;

        text-align: center;
      }

      .shiftKey
      {
          width: 9.75vw;
          text-align: center;
      }


      .key
      {
          position: relative;
      }

      #onScreenKeyboard .key
      {
          font-size: 2.5vw;
          font-family: monospace;
          background-color: black;
          color: white;
          padding: 1.2vw 2.2vw 1.2vw 2.2vw;
          border-radius: 2px;
          margin: .125vw;
          display: inline-block;
          /*float: left;*/
          border: white .1vw solid;
          opacity: .5;
      }

      #onScreenKeyboard .key.keyPressed
      {
          background: white;
          color: black;
          /*filter: invert();*/
      }

      .keyRow
      {
      }

      .shifted
      {
        font-size: 1.75vw;
        position: absolute;
        margin-left: .25vw; /* fudge */
        top:.5vw;
      }

      .normal
      {
          position: relative;
          top: 1vw;
      }

      .hidden{
          display: none;
      }

      #joystick
      {
          width: 20vw;
          height: 20vw;
          border-radius: 20vw;
          border: rgba(255,255,255,.7) thick double;
          background-color: rgba(0,0,0,.2);
      }

      #innerJoystick
      {
          width: 13vw;
          height: 13vw;
          border-radius: 10vw;
          border: rgba(0,0,0,.7) thick double;
          position: absolute;
          left: 3.5vw;
          top: 3.5vw;
          background-color: rgba(255,225,255,.2);
      }

      @media (orientation: portrait) {
          .fullscreen canvas.emscripten {
              border-radius: 0px;
              height: auto;
              width: 100vw;
              height: 75vw;
              /*max-width: 100vw;*/
              /*max-width:Calc(100vmax - 100px);*/
              /*box-sizing: border-box;*/
              /*box-shadow: 0 0 20px black;*/
              margin-left: auto;
              margin-right: auto;
          }

          body, html{
              height: 100vh;
              width: 100vw;
          }

          .fullscreen #sound{
              position: absolute;
              top: 45vh;
          }

          .fullscreen #controller
          {
              position: absolute;
              bottom:25vw;
              left: 5vw;
              width: 80vw;
          }

          .fullscreen .conButton{
              width: 14vw;
              height: 14vw;

          }

          .fullscreen #b {
              right: 10vw;
          }

          #keyboardContainer
          {
             display: none;
          }

          #optButtons
          {
              position: relative;
              top: 15vw;
              left: -5vw;
          }

     }
